apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mlops-ingress
  namespace: mlops-housing
  labels:
    app.kubernetes.io/name: mlops-ingress
    app.kubernetes.io/part-of: mlops-platform
  annotations:
    # AWS Load Balancer Controller annotations
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    
    # Health check configuration
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    
    # Load balancer attributes
    alb.ingress.kubernetes.io/load-balancer-attributes: routing.http2.enabled=true,idle_timeout.timeout_seconds=60
    
    # Security groups - Let ALB controller manage automatically
    
    # Tags
    alb.ingress.kubernetes.io/tags: Environment=production,Project=mlops-housing
    
    # Certificate ARN (uncomment when you have SSL certificate)
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:region:account-id:certificate/cert-id
    
spec:
  rules:
  # Default host (using ALB DNS name)
  - http:
      paths:
      # API Service
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: api-service
            port:
              number: 8000
      # Predict Service  
      - path: /predict
        pathType: Prefix
        backend:
          service:
            name: predict-service
            port:
              number: 8001
      # Health checks at root
      - path: /health
        pathType: Exact
        backend:
          service:
            name: api-service
            port:
              number: 8000
              
  # Custom domain not required as per specifications
  
---
# Service Monitor for Prometheus (scrape metrics from services)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: mlops-services
  namespace: mlops-housing
  labels:
    app.kubernetes.io/name: mlops-services
    app.kubernetes.io/part-of: mlops-platform
spec:
  selector:
    matchLabels:
      component: api
  namespaceSelector:
    matchNames:
    - mlops-housing
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: mlops-predict-services
  namespace: mlops-housing
  labels:
    app.kubernetes.io/name: mlops-predict-services
    app.kubernetes.io/part-of: mlops-platform
spec:
  selector:
    matchLabels:
      component: predict
  namespaceSelector:
    matchNames:
    - mlops-housing
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s