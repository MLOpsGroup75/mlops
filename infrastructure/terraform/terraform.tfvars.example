# Copy this file to terraform.tfvars and update with your specific values
# cp terraform.tfvars.example terraform.tfvars

# Project Configuration
project_name = "mlops-housing"
environment  = "dev"  # dev, staging, prod
aws_region   = "us-west-2"  # Change to your preferred region

# VPC Configuration (adjust if needed)
vpc_cidr        = "10.0.0.0/16"
private_subnets = ["10.0.1.0/24", "10.0.2.0/24", "10.0.3.0/24"]
public_subnets  = ["10.0.101.0/24", "10.0.102.0/24", "10.0.103.0/24"]

# EKS Configuration
cluster_version = "1.28"

# Node Groups Configuration
node_groups = {
  main = {
    instance_types = ["t3.medium"]
    min_size       = 2
    max_size       = 10
    desired_size   = 3
    capacity_type  = "ON_DEMAND"
  }
  spot = {
    instance_types = ["t3.medium", "t3.large"]
    min_size       = 0
    max_size       = 5
    desired_size   = 2
    capacity_type  = "SPOT"
  }
}

# Application Configuration
docker_registry        = "docker.io"
api_service_image      = "your-dockerhub-username/your-repo/api-service"     # Update with your Docker Hub repo
predict_service_image  = "your-dockerhub-username/your-repo/predict-service" # Update with your Docker Hub repo
image_tag              = "latest"

# Feature Flags
enable_argocd     = true
enable_monitoring = true

# Versions (update as needed)
argocd_chart_version     = "5.51.6"
prometheus_chart_version = "25.8.0"

# Domain Configuration (optional)
# domain_name = "mlops.your-domain.com"  # Uncomment and set your domain
# enable_ssl  = true                     # Uncomment to enable SSL

# Examples for different environments:

# Development Environment:
# project_name = "mlops-housing"
# environment  = "dev"
# node_groups = {
#   main = {
#     instance_types = ["t3.small"]
#     min_size       = 1
#     max_size       = 3
#     desired_size   = 2
#     capacity_type  = "SPOT"
#   }
# }

# Production Environment:
# project_name = "mlops-housing"
# environment  = "prod"
# node_groups = {
#   main = {
#     instance_types = ["t3.large"]
#     min_size       = 3
#     max_size       = 20
#     desired_size   = 5
#     capacity_type  = "ON_DEMAND"
#   }
#   spot = {
#     instance_types = ["t3.large", "t3.xlarge"]
#     min_size       = 0
#     max_size       = 10
#     desired_size   = 3
#     capacity_type  = "SPOT"
#   }
# }